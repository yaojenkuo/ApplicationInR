quakes$yearPart <- as.numeric(format(quakes$datePart, "%Y"))
quakes$dateTime <- paste(quakes$datePart, quakes$timePart)
quakesTW <- quakes[-1]
saveRDS(quakesTW, "C:/ApplicationInR/quakesTW/data/quakesTW.rds")
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
shiny::runApp('C:/ApplicationInR/quakesTW')
q()
shiny::runApp('C:/ApplicationInR/quakesTW')
q()
install.packages('devtools')
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
library(rsconnect)
shinyapps::setAccountInfo(name='yaojenkuo', token='C78DF668EE134F538EC050A2DA6CEDA7', secret='9JpGahAHVlmIRP1CYp9wApTCB/YFckvcMnsgefrC')
library(shinyapps)
library("shiny", lib.loc="C:/Program Files/R/R-3.2.2/library")
shinyapps::setAccountInfo(name='yaojenkuo', token='C78DF668EE134F538EC050A2DA6CEDA7', secret='9JpGahAHVlmIRP1CYp9wApTCB/YFckvcMnsgefrC')
shiny::runApp('C:/ApplicationInR/quakesTW')
q()
search()
install.packages("vcd")
search()
library(vcd)
search()
installed.packages()
list <- installed.packages()
head(list)
list[1]
list[2]
list[,1]
list[,2]
list[,3][1]
class(list)
summary(list)
str(list)
mixedVecotr <- c(1, "two", TRUE)#文字Vector
str(mixedVector)
class(mixedVector)
mixedVector
mixedVecotr <- c(1, "two", TRUE)
mixedVector <- c(1, "two", TRUE)
class(mixedVector)
str(mixedVector)
numericVector <- c(1, 2, 5, 3, 6, -2, 4)
length(numericVector)
seq(1:12)
c(1:12)
vector <- c(1:12)
matrix <- (vector, nrow=4, ncol=3, byrow=TRUE)
matrix <- (vector, nrow=4, ncol=3, byrow=TRUE)
matrix <- matrix(vector, nrow=4, ncol=3, byrow=TRUE)
matrix
vector1 <- matrix[1,]#取出Matrix中的第一列, 變成Vector
class(vector1)#檢查一下vector1的類別
typeof(vector1)
vector1
x <- c("X1", "X2")
y <- c("Y1", "Y2", "Y3")
z <- c("Z1", "Z2", "Z3", "Z4")
array <- array(1:24, c(2, 3, 4), dimnames=list(x, y, z))
array[1 , ,]#取出四個matrice的第一列
array[ ,2 ,]#取出四個matrice的第二欄
array[ , ,3]#取出第三個matrix
array[1,2,3]#取出第三個matrix中位於第一列第二欄的元素
patientID <- c("P01", "P02", "P03", "P04")
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientdata <- data.frame(patientID, age, diabetes, status)
View(patientdata)
patientData$age[1]
patientdata$age[1]
q()
patientID <- c("P01", "P02", "P03", "P04")
age <- c(25, 34, 28, 52)
diabetes <- c("Type1", "Type2", "Type1", "Type1")
status <- c("Poor", "Improved", "Excellent", "Poor")
patientData <- data.frame(patientID, age, diabetes, status)
attach(patientData)
summary(age)
detach(patientData)
with(patientData,{
summary(age)
})
status <- factor(status, order=TRUE, levels=c("Poor", "Improved", "Excellent"))
head(mtcars)
summary(patientData)
str(patientData)
length(mtcars)
dim(mtcars)
names(mtcars)
names(mtcars)[9]#檢視mtcars的欄位名
g <- "My First List"
h <- c(25, 26, 18, 39)
j <- matrix(1:10, nrow=5)
k <- c("one", "two", "three")
myList <- list(title=g, ages=h, j, k)#給Vector h一個名稱ages
myList#把mylist印出來看看
myList[2]
myList["ages"]
myList[["ages"]]#Vector h
myList[[3]]
myList[[3]][4,2]
seq(from=12, to=90, by=3)
seq(from=12, to=90, length=30)#產生一個從12到90，Scalars個數為30的向量
seq(from=12, to=90, length=30)#產生一個從10到90，Scalars個數為30的向量
seq(from=12, to=90, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=1, to=90, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=0, to=90, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=1, to=100, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=1, to=101, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=1, to=102, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=1, to=103, length=30)#產生一個從1到90，Scalars個數為30的向量
seq(from=10, to=100, length=9)#產生一個從1到90，Scalars個數為30的向量
seq(from=100, to=1000, length=10)#產生一個從1到90，Scalars個數為30的向量
q()
colNames <- names(mtcars)
for (index in 1:length(colNames)){
print(index)
}
for (index in 1:length(colNames)){
colNames[index]
}
for (index in 1:length(colNames)){
print(colNames[index])
}
install.packages("pixmap")
library(pixmap)
onePiece <- read.pnm("image/onepiece.jpg")
onePiece <- read.pnm("C:/NTUTrainRL1/image/onepiece.jpg")
install.packages("jpeg")
library(jpeg)
onePiece <- readJPEG("C:/NTUTrainRL1/image/onepiece.jpg")
plot(onePiece)
str(onePiece)
onePiece <- read.pnm("C:/NTUTrainRL1/image/onepiece.pgm")
q()
library(pixmap)
onePiece <- read.pnm("C:/NTUTrainRL1/image/onePiece.pgm")
plot(onePiece)
str(onePiece)
onePiece
onePiece@grey[300, 600]#看一下(300, 600)這個像素的亮度
locator()#這是R的內建函式，可以找到圖片坐標
locator()#這是R的內建函式，可以找到圖片坐標
NoWusobu <- onePiece
NoWusobu@grey[219.0638:311.9182, 301.05464:68.91861] <- 1#把騙人布用白色遮掉
plot(NoWusobu)
noUsopp <- onePiece
noUsopp@grey[219.0638:311.9182, 68.91861:301.05464] <- 1#把騙人布用白色遮掉
plot(noUsopp)
noUsopp <- onePiece
noUsopp@grey[68.91861:301.05464, 219.0638:311.9182] <- 1#把騙人布用白色遮掉
plot(noUsopp)
mosaicPart <- function(img,rows,cols,q) {
lrows <- length(rows)
lcols <- length(cols)
newImg <- img
randomNoise <- matrix(nrow=lrows, ncol=ncols,runif(lrows*lcols))
newImg@grey <- (1-q) * img@grey + q * randomNoise
return(newImg)
}
mosaicUsopp <- mosaicPart(onePiece,68.91861:301.05464, 219.0638:311.9182, 0.65)
plot(mosaicUsopp)
mosaicPart <- function(img,rows,cols,q) {
lrows <- length(rows)
lcols <- length(cols)
newImg <- img
randomNoise <- matrix(nrow=lrows, ncol=lcols,runif(lrows*lcols))
newImg@grey <- (1-q) * img@grey + q * randomNoise
return(newImg)
}
mosaicUsopp <- mosaicPart(onePiece,68.91861:301.05464, 219.0638:311.9182, 0.65)
plot(mosaicUsopp)
mosaicPart <- function(img,rows,cols,q) {
lrows <- length(rows)
lcols <- length(cols)
newImg <- img
randomNoise <- matrix(nrow=lrows, ncol=lcols,runif(lrows*lcols))
newImg@grey <- (1-q) * img@grey + q * randomNoise
return(newImg)
}
mosaicUsopp <- mosaicPart(onePiece, 68.91861:301.05464, 219.0638:311.9182, 0.65)
blurpart <- function(img,rows,cols,q) {
lrows <- length(rows)
lcols <- length(cols)
newimg <- img
randomnoise <- matrix(nrow=lrows, ncol=ncols,runif(lrows*lcols))
newimg@grey <- (1-q) * img@grey + q * randomnoise
return(newimg)
}
mosaicUsopp <- blurpart(onePiece, 68.91861:301.05464, 219.0638:311.9182, 0.65)
plot(mosaicUsopp)
blurpart <- function(img,rows,cols,q) {
lrows <- length(rows)
lcols <- length(cols)
newimg <- img
randomnoise <- matrix(nrow=lrows, ncol=lcols,runif(lrows*lcols))
newimg@grey <- (1-q) * img@grey + q * randomnoise
return(newimg)
}
mosaicUsopp <- blurpart(onePiece, 68.91861:301.05464, 219.0638:311.9182, 0.65)
plot(mosaicUsopp)
plot(onePiece)
library(XML)
post <- xmlParse("https://www.post.gov.tw/post/internet/I_location/index_all.html", isHTML = TRUE)
class(post)
post <- htmlParse("https://www.post.gov.tw/post/internet/I_location/index_all.html")
library(XML)
post <- htmlParse("https://www.post.gov.tw/post/internet/I_location/index_all.html")
class(post)
post <- htmlTreeParse("https://www.post.gov.tw/post/internet/I_location/index_all.html")
class(post)
str(post)
head(post)
post <- htmlParse("https://www.post.gov.tw/post/internet/I_location/index_all.html")
postRoot <- xmlRoot(post)
postRoot
xmlSize(postRoot)
xmlSApply(postRoot, xmlSize)
xmlSApply(postRoot, xmlName)
postBody <- xmlChildren(postRoot)$body
postBody
postTable <- readHTMLTable(post, which=1)
post <- htmlParse("https://www.post.gov.tw/post/internet/I_location/index_all.html")
postTable <- readHTMLTable(post)
head(postTable)
post
post <- htmlParse("https://www.post.gov.tw/post/internet/I_location/index_all.html")
post
post <- htmlTreeParse('https://www.post.gov.tw/post/internet/I_location/index_all.html', useInternalNodes=TRUE)
post
htmlParse<-xpathApply(post, path="//div", fun=xmlValue)
htmlParse<-xpathApply(post, path="//td", fun=xmlValue)
htmlParse<-xpathApply(post, path="//body", fun=xmlValue)
htmlParse
htmlParse<-xpathApply(post, path="//body//p", fun=xmlValue)
htmlParse
htmlParse<-xpathApply(post, path="//p", fun=xmlValue)
htmlParse
htmlParse<-xpathApply(post, path="//head", fun=xmlValue)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, stringsAsFactors=FALSE)
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami")
occupation <- c("Captain", "Swordsman", "Navigator")
bounty <- c(500000000, 320000000, 66000000)
age <- c(19, 21, 20)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995")
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, stringsAsFactors=FALSE)
View(strawHatPirate)
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami")
occupation <- c("Captain", "Swordsman", "Navigator")
bounty <- c(500000000, 320000000, 66000000)
age <- c(19, 21, 20)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995")
strength <- c(90, 90, 15)
intelligence <- c(20, 30, 90)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
View(strawHatPirate)
attach(strawHatPirate)
ratingSum <- strength + intelligence
ratingAvv <- (strength + intelligence)/2
detach(strawHatPirate)
strawHatPirate
strawHatPirate <- within(strawHatPirate, {
bountyLevel[bounty<100000000] <- "Low"
bountyLevel[bounty>100000000 & bounty<500000000] <- "Medium"
bountyLevel[bounty>=500000000] <- "High"
}
)
View(strawHatPirate)
attach(strawHatPirate)
ratingSum <- strength + intelligence
ratingAvg <- (strength + intelligence)/2
detach(strawHatPirate)
strawHatPirate
strawHatPirate <- transform(
strawHatPirate,
ratingSum <- strength + intelligence,
ratingAvg <- (strength + intelligence)/2
)
strawHatPirate
strawHatPirate <- transform(
strawHatPirate,
ratingSum = strength + intelligence,
ratingAvg = (strength + intelligence)/2
)
strawHatPirate
strawHatPirate <- within(strawHatPirate, {
bountyLevel[bounty<100000000] <- "Low"
bountyLevel[bounty>100000000 & bounty<500000000] <- "Medium"
bountyLevel[bounty>=500000000] <- "High"
}
)
strawHatPirate <- within(strawHatPirate, {
bountyLevel <- NA
bountyLevel[bounty<100000000] <- "Low"
bountyLevel[bounty>100000000 & bounty<500000000] <- "Medium"
bountyLevel[bounty>=500000000] <- "High"
}
)
strawHatPirate
View(strawHatPirate)
names(strawHatPirate)#印出所有的變數
names(strawHatPirate)[6] <- "attack"#將strength改名為attack
strawHatPirate
names(strawHatPirate)[6,8:9] <- c("strength", "sumRating", "avgRating")
strawHatPirate
names(strawHatPirate)[6, 8, 9] <- c("strength", "sumRating", "avgRating")
names(strawHatPirate)[8, 9] <- c("sumRating", "avgRating")
strawHatPirate
names(strawHatPirate)#印出所有的變數
names(strawHatPirate)[8:9] <- c("sumRating", "avgRating")
strawHatPirate
str(strawHatPirate$birthday)
attach(strawHatPirate)
birthdayAsDate <- as.Date(birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
str(strawHatPirate$birthdayAsDate)
detach(strawHatPirate)
str(strawHatPirate$birthdayAsDate)
strawHatPirate$birthdayAsDate <- as.Date(strawHatPirate$birthday, "%m/%d/%Y")#Y for 4-digit, y for 2-digit
str(strawHatPirate$birthdayAsDate)
max(strawHatPirate$birthdayAsDate)
min(strawHatPirate$birthdayAsDate)#轉換成日期格式後可以下max或min
q()
q()
name <- c("Monkey D. Luffy", "Roronoa Zoro", "Nami", "Sanji")
occupation <- c("Captain", "Swordsman", "Navigator", "Chef")
bounty <- c(500000000, 320000000, 66000000, NA)
age <- c(19, 21, 20, 21)
birthday <- c("5/5/1996", "11/11/1994", "7/3/1995", "3/2/1994")
strength <- c(99, 90, 15, 80)
intelligence <- c(20, 30, 90, 40)
strawHatPirate <- data.frame(name, occupation, bounty, age, birthday, strength, intelligence, stringsAsFactors=FALSE)
strawHatPirate[order(strawHatPirate$age),]
strawHatPirate[order(-strawHatPirate$intelligence, strawHatPirate$age),]
strawHatPirate[order(-strawHatPirate$intelligence, strawHatPirate$strength),]#先用智力遞減排序再用力量遞增排序
q()
date <- c(2015-11-13, 2015-03-18, 2015-06-26, 2015-11-12, 2015-10-31, 2015-10-10, 2015-06-26, 2015-05-22, 2015-03-21)
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths)
View(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths)
View(ISAttacks2015)
str(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
View(ISAttacks2015)
str(date)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
str(date)
str(ISAttacks2015)
ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks2015)
ISAttacks2015 <- ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks2015)
date <- c('2015-11-13', '2015-03-18', '2015-06-26', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-05-22', '2015-03-21')
country <- c('France', 'Tunisia', 'Tunisia', 'Lebanon', 'Egypt', 'Turkey', 'Kuwait', 'Saudi Arabia', 'Yemen')
city <- c('Paris', 'Tunis', 'Sousse', 'Beirut', 'Sunmarine', 'Ankara', 'Kuwait City', 'Qatif', 'Sana\'a')
deaths <- c(129, 19, 38, 43, 224, 102, 27, 21, 137)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
ISAttacks <- ISAttacks2015[order(ISAttacks2015$date),]
View(ISAttacks)
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sunmarine', 'Ankara', 'Sousse', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Khan Bani Saad', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis City')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
View(ISAttacks2015)
str(ISAttacks2015)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Khan Bani Saad', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis City')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
setwd("C:/ApplicationInR/ISAttacks2015")
# Load required packages
library(rgdal) # to read Shapefile
library(rgeos) # to simplify Shapefile
library(geojsonio) # to write GeoJSON
library(maptools)
# Read Shapefile of states from C:/ApplicationInR/ISAttacks2015/states
stateShp <- readShapePoly('C:/ApplicationInR/ISAttacks2015/states/ne_10m_admin_1_states_provinces.shp')
str(stateShp@data)
stateShp@data$name
head(stateShp@data)
View(ISAttacks2015)
stateShp2 <- stateShp@data[, c('name')]
str(stateShp2)
head(stateShp2)
stateShp2 <- stateShp@data[, c('name', 'latitude', 'longitude')]
head(stateShp2)
ISAttacks1 <- merge(stateShp2, ISAttacks2015, by.x=name, by.y=city, all.x=T, all.y=T)
ISAttacks1 <- merge(stateShp2, ISAttacks2015, by.x='name', by.y='city', all.x=T, all.y=T)
View(ISAttacks1)
ISAttacks1 <- merge(stateShp2, ISAttacks2015, by.x='name', by.y='city', all.x=F, all.y=T)
View(ISAttacks1)
plot(stateShp)
stateShp2 <- stateShp@data[, c('admin', 'name', 'latitude', 'longitude')]
stateShp2[admin=='Iraq',]
stateShp2[stateShp2$admin=='Iraq',]
stateShp2[stateShp2$admin=='Egypt',]
stateShp2[stateShp2$admin=='Saudi Arabia',]
stateShp2[stateShp2$admin=='Tunisia',]
stateShp2[stateShp2$admin=='Kuwait',]
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
state <- c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, country, state, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
ISAttacks1 <- merge(stateShp2, ISAttacks2015, by.x='name', by.y='city', all.x=F, all.y=T)
ISAttacks1 <- merge(stateShp2, ISAttacks2015, by.x='name', by.y='state', all.x=F, all.y=T)
View(ISAttacks1)
View(ISAttacks2015)
ISAttacks1 <- merge(stateShp2, ISAttacks2015, by.x='name', by.y='state', all.x=F, all.y=T)
View(ISAttacks1)
View(ISAttacks2015)
stateShp3 <- stateShp@data[stateShp@data$name==c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis'),]
stateShp3 <- stateShp[stateShp$name==c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis'),]
head(stateShp$name)
stateShpSubset <- stateShp[stateShp$name %in% c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis'),]
head(stateShpSubset)
plot(stateShpSubset)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
state <- c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, state, deaths, stringsAsFactors=FALSE)
ISAttacks <- merge(stateShpSubset, ISAttacks2015, by.x='name', by.y='state', all.x=F, all.y=T)
ISAttacksSimplify<-gSimplify(ISAttacks,tol=0.05, topologyPreserve=TRUE)
ISAttacksSPDF <- SpatialPolygonsDataFrame(ISAttacksSimplify)
ISAttacksSPDF <- SpatialPolygonsDataFrame(ISAttacksSimplify, data=ISAttacksSimplify)
stateShp <- readShapePoly('C:/ApplicationInR/ISAttacks2015/states/ne_10m_admin_1_states_provinces.shp')
stateShpSubset <- stateShp[stateShp$name %in% c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis'),]
stateShpMerge <- merge(stateShpSubset, ISAttacks2015, by.x='name', by.y='state', all.x=T)
date <- c('2015-11-13', '2015-11-12', '2015-10-31', '2015-10-10', '2015-07-18', '2015-06-26', '2015-06-26', '2015-05-22', '2015-03-21','2015-03-18')
#country <- c('France', 'Lebanon', 'Egypt', 'Turkey', 'Tunisia', 'Iraq', 'Kuwait', 'Saudi Arabia', 'Yemen', 'Tunisia')
state <- c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis')
city <- c('Paris', 'Beirut', 'Sharm el Sheikh', 'Ankara', 'Sousse', 'Khan Bani Saad', 'Kuwait City', 'Qatif', 'Sana\'a', 'Tunis City')
deaths <- c(129, 43, 224, 102, 38, 125, 27, 21, 137, 19)
ISAttacks2015 <- data.frame(date, state, city, deaths, stringsAsFactors=FALSE)
ISAttacks2015$date <- as.Date(ISAttacks2015$date, "%Y-%m-%d")#Y for 4-digit
stateShpSubset <- stateShp[stateShp$name %in% c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis'),]
stateShpMerge <- merge(stateShpSubset, ISAttacks2015, by.x='name', by.y='state', all.x=T)
stateShpData <- stateShpMerge@data[,c("date", "city", "deaths")]
ISAttacksSimplify <- gSimplify(stateShpSubset,tol=0.05, topologyPreserve=TRUE)
stateShpSimplify <- gSimplify(stateShpSubset,tol=0.05, topologyPreserve=TRUE)
stateSPDF <- SpatialPolygonsDataFrame(stateShpSimplify, data=stateShpData)
rownames(stateShpSimplify)=rownames(stateShpData)
rownames(ISAttacks2015)=rownames(stateShpSubset)
stateShpMerge <- merge(stateShpSubset, ISAttacks2015, by.x='name', by.y='state', all.x=T)
stateShpData <- stateShpMerge@data[,c("date", "city", "deaths")]
stateShpSimplify <- gSimplify(stateShpSubset,tol=0.05, topologyPreserve=TRUE)
stateSPDF <- SpatialPolygonsDataFrame(stateShpSimplify, data=stateShpData)
rownames(stateShpMerge)=rownames(stateShpSubset)
stateSPDF <- SpatialPolygonsDataFrame(stateShpSimplify, data=stateShpData)
stateShp <- readShapePoly('C:/ApplicationInR/ISAttacks2015/states/ne_10m_admin_1_states_provinces.shp')
stateShpSubset <- stateShp[stateShp$name %in% c('Paris', 'Beirut', 'Janub Sina\'', 'Ankara', 'Sousse', 'Diyala', 'Al Asimah', 'Ash Sharqiyah', 'Sana\'a', 'Tunis'),]
stateShpMerge <- merge(stateShpSubset, ISAttacks2015, by.x='name', by.y='state', all.x=T)
stateShpData <- stateShpMerge@data[,c("date", "city", "deaths")]
stateShpSimplify <- gSimplify(stateShpSubset,tol=0.05, topologyPreserve=TRUE)
rownames(stateShpSimplify) <- rownames(stateShpData)
stateSPDF <- SpatialPolygonsDataFrame(stateShpSimplify, data=stateShpData)
stateShpSubset <- stateShpSubset[order(stateShpSubset$name),]
stateShpMerge <- merge(stateShpSubset, ISAttacks2015, by.x='name', by.y='state', all.x=T)
rownames(stateShpMerge) <- rownames(stateShpSubset)
stateSPDF <- SpatialPolygonsDataFrame(stateShpSimplify, data=stateShpMerge)
